version: '3.8'

services:
  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    container_name: beauty-salon-nginx
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - frontend
      - backend
    restart: unless-stopped
    networks:
      - beauty-salon-network
    volumes:
      - ./nginx/certbot/conf:/etc/letsencrypt
      - ./nginx/certbot/www:/var/www/certbot

  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - ./nginx/certbot/conf:/etc/letsencrypt
      - ./nginx/certbot/www:/var/www/certbot
    command: certonly --webroot --webroot-path=/var/www/certbot --email your-email@example.com --agree-tos --no-eff-email -d beauty-manager.app -d www.beauty-manager.app

  rabbitmq:
    image: rabbitmq:3.10.7-management
    container_name: rabbitmq
    hostname: rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: ${RMQ_USERNAME:-guest}
      RABBITMQ_DEFAULT_PASS: ${RMQ_PASSWORD:-guest}
    ports:
      - "15672:15672"
      - "5672:5672"
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
      - rabbitmq-log:/var/log/rabbitmq
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 10s
      timeout: 30s
      retries: 5
      start_period: 30s
    networks:
      - beauty-salon-network
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: beauty-salon-frontend
    restart: unless-stopped
    networks:
      - beauty-salon-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: beauty-salon-backend
    env_file:
      - .env
    restart: unless-stopped
    volumes:
      - ./backend:/app
    depends_on:
      - db
      - rabbitmq
    networks:
      - beauty-salon-network

  db:
    image: postgres:15
    container_name: beauty-salon-db
    environment:
      POSTGRES_DB: beauty_salon
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - beauty-salon-network

  whatsapp-bot:
    build:
      context: ./bot
      dockerfile: Dockerfile
    container_name: whatsapp-bot
    env_file:
      - .env
    restart: unless-stopped
    volumes:
      - ./bot:/app
    depends_on:
      - backend
      - rabbitmq
    networks:
      - beauty-salon-network

volumes:
  postgres_data:
  rabbitmq-data:
  rabbitmq-log:
  certbot-www:
  certbot-conf:

networks:
  beauty-salon-network:
    driver: bridge