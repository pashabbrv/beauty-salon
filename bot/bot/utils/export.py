import os
import requests
from typing import Optional, Tuple, Any

BACKEND_BASE_URL = os.getenv("BACKEND_BASE_URL")
AUTH_TOKEN       = os.getenv("BACKEND_TOKEN")

APPOINTMENTS_PATH = "/api/appointments/"


def format_appointments_to_text(appointments):
    """
    –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç —Å–ø–∏—Å–æ–∫ –∑–∞–ø–∏—Å–µ–π –≤ —É–¥–æ–±–æ—á–∏—Ç–∞–µ–º—ã–π —Ç–µ–∫—Å—Ç –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    """
    if not appointments:
        return "–ù–µ—Ç –∑–∞–ø–∏—Å–µ–π –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è"
    
    result = ["üìã –°–ü–ò–°–û–ö –ó–ê–ü–ò–°–ï–ô\n"]
    
    for i, appointment in enumerate(appointments, 1):
        # –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∑–∞–ø–∏—Å–∏
        confirmed_status = "‚úÖ –ü–û–î–¢–í–ï–†–ñ–î–ï–ù–ê" if appointment.get('confirmed') else "‚ùå –ù–ï –ü–û–î–¢–í–ï–†–ñ–î–ï–ù–ê"
        
        appointment_text = f"""
üìÑ –ó–ê–ü–ò–°–¨ #{i} (ID: {appointment.get('id', 'N/A')})
{confirmed_status}
–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è: {appointment.get('created_at', 'N/A')}

üë§ –ö–õ–ò–ï–ù–¢:
‚Ä¢ –ò–º—è: {appointment.get('name', 'N/A')}
‚Ä¢ –¢–µ–ª–µ—Ñ–æ–Ω: {appointment.get('phone', 'N/A')}

üíÖ –£–°–õ–£–ì–ê:
‚Ä¢ –ù–∞–∑–≤–∞–Ω–∏–µ: {appointment['offering']['service']['name']}
‚Ä¢ –¶–µ–Ω–∞: {appointment['offering']['price']} —Ä—É–±.
‚Ä¢ –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: {appointment['offering']['duration']}

üë©‚Äçüíº –ú–ê–°–¢–ï–†:
‚Ä¢ –ò–º—è: {appointment['offering']['master']['name']}
‚Ä¢ –¢–µ–ª–µ—Ñ–æ–Ω: {appointment['offering']['master']['phone']}
‚Ä¢ ID: {appointment['offering']['master']['id']}

üìÖ –í–†–ï–ú–Ø:
‚Ä¢ –ù–∞—á–∞–ª–æ: {appointment['slot']['start']}
‚Ä¢ –ö–æ–Ω–µ—Ü: {appointment['slot']['end']}
{'='*50}
"""
        result.append(appointment_text)
    
    # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    total = len(appointments)
    confirmed = sum(1 for app in appointments if app.get('confirmed'))
    not_confirmed = total - confirmed
    
    stats = f"""
üìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê:
‚Ä¢ –í—Å–µ–≥–æ –∑–∞–ø–∏—Å–µ–π: {total}
‚Ä¢ –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–Ω—ã—Ö: {confirmed}
‚Ä¢ –ù–µ–ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–Ω—ã—Ö: {not_confirmed}
"""
    result.append(stats)
    
    return "\n".join(result)


def get_appointments(
    date: Optional[str] = None,          # "YYYY-MM-DD" –∏–ª–∏ None
    confirmed: Optional[bool] = None,    # True/False/None
    timeout: int = 30
) -> Tuple[bool, Any]:
    """
    –î–µ–ª–∞–µ—Ç GET /api/appointments —Å header Auth-Token.
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç (ok, data|error_text).
    ok=True  -> data = JSON/obj
    ok=False -> data = —Ç–µ–∫—Å—Ç –æ—à–∏–±–∫–∏ (str)
    """
    if not BACKEND_BASE_URL:
        return False, "BACKEND_BASE_URL –Ω–µ –∑–∞–¥–∞–Ω –≤ .env"
    if not AUTH_TOKEN:
        return False, "AUTH TOKEN –Ω–µ –∑–∞–¥–∞–Ω (.env BACKEND_AUTH_TOKEN –∏–ª–∏ BACKEND_TOKEN)"

    url = f"{BACKEND_BASE_URL}{APPOINTMENTS_PATH}"

    # –°–æ–±–∏—Ä–∞–µ–º query-–ø–∞—Ä–∞–º–µ—Ç—Ä—ã —Å–æ–≥–ª–∞—Å–Ω–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏
    params = {}
    if date is not None and date != "":
        params["date"] = date
    if confirmed is not None:
        # –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–æ –±–µ–∫–æ–≤ –ø–æ–Ω–∏–º–∞—é—Ç true/false –∫–∞–∫ –±—É–ª–µ–≤–æ, –Ω–æ –±–µ–∑–æ–ø–∞—Å–Ω–æ –æ—Ç–¥–∞—Ç—å —Å—Ç—Ä–æ–∫—É
        params["confirmed"] = "true" if confirmed else "false"

    headers = {"Auth-Token": AUTH_TOKEN}

    try:
        resp = requests.get(url, params=params, headers=headers, timeout=timeout)
        # 422 = Validation Error –ø–æ –¥–æ–∫–µ ‚Äî –≤–µ—Ä–Ω—ë–º —Ç–µ–∫—Å—Ç
        if resp.status_code != 200:
            return False, f"HTTP {resp.status_code}: {resp.text}"
        # –ø—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º JSON
        ctype = resp.headers.get("Content-Type", "")
        if "application/json" in ctype.lower():
            return True, resp.json()
        # –µ—Å–ª–∏ –Ω–µ json ‚Äî –≤–µ—Ä–Ω—ë–º –∫–∞–∫ —Ç–µ–∫—Å—Ç
        return True, resp.text
    except requests.RequestException as e:
        return False, f"request error: {e}"
